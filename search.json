[{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 DeIDmachinedata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Deidentifying a Flat File","text":"Ophthalmology uses many devices monitor record patient’s visual function. extracting historical information device, data must de-identified submitting SOURCE, Sight OUtcomes Research CollaborativE (https://www.sourcecollaborative.org/). two functions package DeIDmachinedata can used, along crosswalks provided , complete data preparation. functions loadxwalks() fileDeID() flexible enough use data extracted many devices. examples vignette Pentacam Visual Field tests extracted FORUM OCT scans CIRRUS Spectrallis devices deidentification process involves replacing patient’s actual MRN Tokenized MRN Datavant’s linkage environment; shifting actual test dates patient-specific, SOURCE-determined number days; removing blanking remaining PII information. examples information remove: demographic information: date birth, sex. already available SOURCE patient file. need include file information: extractions indicate location image data local file system. use SOURCE potentially reidentify person. service information: extractions include location test/scan. technically PII, SOURCE masks site information eliminate column end didn’t.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"before-you-start","dir":"Articles","previous_headings":"Introduction","what":"Before you start","title":"Deidentifying a Flat File","text":"Get two files . files crosswalk MRN Tokenized MRN date-shift repository. files created part extraction EPIC using code shared SOURCE Data Architect Team. Inspect files want deidentify. ’ll need determine names variables contain PII. functions described pass-columns mentioned arguments input file output file. format date datetime variables shifted. Install R package “DeIDmachinedata” GitHub:","code":"install.packages(\"remotes\") remotes::install_github(\"chrisandrewsphd/DeIDmachinedata\")"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"after-you-finish","dir":"Articles","previous_headings":"Introduction","what":"After you finish","title":"Deidentifying a Flat File","text":"course, inspect output files confirm properly used functions PII longer present. deliver files SOURCE delivered files.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"using-deidmachinedata","dir":"Articles","previous_headings":"","what":"Using DeIDmachinedata","title":"Deidentifying a Flat File","text":"Within R, load R library:","code":"library(DeIDmachinedata)"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"loadxwalks","dir":"Articles","previous_headings":"Using DeIDmachinedata","what":"loadxwalks()","title":"Deidentifying a Flat File","text":"loadxwalks() reads two files provided creates data.frame R. input files can various formats, resulting data.frame structure expected fileDeID(). function call used regardless type machine data deidentified. typical call creates data.frame “xwalk” environment: ’ll need specify proper filenames. Supply complete path R working directory. interested object, can run lines R code","code":"xwalk <- loadxwalks(   tokenfile = \"mrncrosswalk.csv\",   dateshiftfile = \"mrndateshift.csv\") # OPTIONAL ls() # list objects in the environment; will include \"xwalk\"  head(xwalk) # display the first 6 lines of xwalk"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"filedeid","dir":"Articles","previous_headings":"Using DeIDmachinedata","what":"fileDeID()","title":"Deidentifying a Flat File","text":"fileDeID() uses crosswalk created loadxwalks() perform 3 items listed specified file. Specifically, patient ID replace tokenized version, dates datetimes shifted, specified columns removed.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"pentacam","dir":"Articles","previous_headings":"Using DeIDmachinedata > fileDeID()","what":"Pentacam","title":"Deidentifying a Flat File","text":"experience Pentacam, variable containing patient’s MRN “PAT-ID:”; variable dateshifted “Exam Date:” (format “%Y%m%d”: 4-digit year, 2-digit month, 2-digit day separators); variables removed “Last Name:”, “First Name:”, “D.o.Birth:”, “Exam Comment:”. Thus, standard call reads file “pentacam.csv” writes file “SOURCE_pentacam.csv” second Pentacam example variables separated semicolons datetime format ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601)","code":"fileDeID(   filetodeid = \"pentacam.csv\",   fd_varname_mrn = \"PAT-ID:\",   variablestoremove =     c(\"Last Name:\", \"First Name:\", \"D.o.Birth:\", \"Exam Comment:\"),   datevariablestodateshift = \"Exam Date:\",   dateformat = \"%Y%m%d\",   xwalk = xwalk,   outputfile = \"SOURCE_\") fileDeID(   filetodeid = \"./Data/Example.csv\",   fd_varname_mrn = \"Patient ID\",   variablestoremove =     c(\"First name\", \"Last name\", \"National ID\", \"OD Comment\", \"OS Comment\"),   datetimevariablestodateshift = \"Date / Time\",   datetimeformat = \"%Y-%m-%dT%H:%M:%OS\",   separator = \";\",   xwalk = xwalk,   outputfile = \"./Data/Example_out.csv\")"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"visual-field-via-forum","dir":"Articles","previous_headings":"Using DeIDmachinedata > fileDeID()","what":"Visual Field (via FORUM)","title":"Deidentifying a Flat File","text":"extraction process visual fields often produces several flat files corresponding several test formats (24-2, 10-2, etc.). can deidentified separately. input output filenames, calls fileDeID() identical. variable containing patient’s MRN usually “MRN” (sometimes “MRN0”); variable dateshifted “TestDate” (format “%Y%m%d”: 4-digit year, 2-digit month, 2-digit day separators) “TestDateTime” (format “%Y-%m-%d %H:%M:%OS”: 4-digit year, hypen, 2-digit month, hypen, 2-digit day, space, 2-digit hour (00-23), colon, 2-digit minute, colon, 2-digit second) ; variables removed “TestID”, “Name”, “MRN0” (“MRN”), “DOB”, “Age”, “Sex”, “Institution”. Thus, typical call ","code":"fileDeID(     filetodeid = \"OPH_HVF.csv\",     fd_varname_mrn = \"MRN\",     variablestoremove =       c(\"TestID\", \"Name\", \"MRN0\", \"DOB\", \"Age\", \"Sex\", \"Institution\"),     datevariablestodateshift = \"TestDate\",     dateformat = \"%Y%m%d\",     datetimevariablestodateshift = \"TestDateTime\",     datetimeformat = \"%Y-%m-%d %H:%M:%OS\",     xwalk = xwalk,     outputfile = \"SOURCE_\")"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"cirrus-oct","dir":"Articles","previous_headings":"Using DeIDmachinedata > fileDeID()","what":"CIRRUS OCT","title":"Deidentifying a Flat File","text":"experience CIRRUS OCT limited one instance. case, variable containing patient’s MRN “PatientID”; variable dateshifted “StudyIDNUM” (format “%Y%m%d”: 4-digit year, 2-digit month, 2-digit day separators); variables removed filename paths: “DicomFilePath_ODCube”, “DicomFilePath_GlaucOUAnalysis”, “DicomFilePath_CorrespondingPDF”. Thus, function call ","code":"fileDeID(   filetodeid = \"cirrus_oct_rnfl.csv\",   fd_varname_mrn = \"PatientID\",   variablestoremove = c(     \"DicomFilePath_ODCube\",     \"DicomFilePath_GlaucOUAnalysis\",     \"DicomFilePath_CorrespondingPDF\"),   datevariablestodateshift = \"StudyIDNUM\",   dateformat = \"%Y%m%d\",   xwalk = xwalk,   outputfile = \"SOURCE_OCT_RNFL.csv\")"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"oct-spectralis","dir":"Articles","previous_headings":"Using DeIDmachinedata > fileDeID()","what":"OCT Spectralis","title":"Deidentifying a Flat File","text":"variable containing patient’s MRN “Patient.ID”; variable dateshifted “OCT.Scan.Date”.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"hfa-via-elze-software","dir":"Articles","previous_headings":"Using DeIDmachinedata > fileDeID()","what":"HFA via Elze Software","title":"Deidentifying a Flat File","text":"variable containing patient’s MRN “id”; variable dateshifted “examtesttime” (format “%y%m%d%H%M”: 2-digit year, 2-digit month, 2-digit day; 2-digit hour; 2-digit minute separators) several variables remove including date birth, sex, second exam time variable looks like internal SAS-type representation datetime, institution, two file paths.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"random-package-details","dir":"Articles","previous_headings":"","what":"Random Package Details","title":"Deidentifying a Flat File","text":"functions help pages. Use ?loadxwalks ?fileDeID see complete list arguments.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/articles/deidentifying_flatfile.html","id":"date-formats","dir":"Articles","previous_headings":"Random Package Details","what":"Date Formats","title":"Deidentifying a Flat File","text":"dates datetimes stored common formats given examples , use ?strptime create proper format data.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chris Andrews. Author, maintainer.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Andrews C (2025). DeIDmachinedata: Uses crosswalks (token dateshift) deidentify output machines. R package version 0.3.0, https://chrisandrewsphd.github.io/DeIDmachinedata/.","code":"@Manual{,   title = {DeIDmachinedata: Uses crosswalks (token and dateshift) to deidentify output from machines},   author = {Chris Andrews},   year = {2025},   note = {R package version 0.3.0},   url = {https://chrisandrewsphd.github.io/DeIDmachinedata/}, }"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/fileDeID.html","id":null,"dir":"Reference","previous_headings":"","what":"De-identify machine extraction data — fileDeID","title":"De-identify machine extraction data — fileDeID","text":"function used de-identify flat file using crosswalk (specific structure, see loadxwalks()). De-identification options include replacing patient MRN tokenized MRN (using crosswalk), removing column, 'blanking' column (column remains dataset values \"\"), shifting date datetime variable (using crosswalk).","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/fileDeID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"De-identify machine extraction data — fileDeID","text":"","code":"fileDeID(   filetodeid,   fd_varname_mrn = \"PAT_MRN\",   variablestoremove = character(0),   variablestoblank = character(0),   datevariablestodateshift = character(0),   dateformat = \"%Y-%m-%d\",   datetimevariablestodateshift = character(0),   datetimeformat = \"%Y-%m-%d %H:%M:%OS\",   separator = \",\",   separator_out = \",\",   xwalk,   compare_mrn_numeric = attr(xwalk, \"compare_mrn_numeric\"),   outputfile = NULL,   usefread = TRUE,   verbose = 0L )"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/fileDeID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"De-identify machine extraction data — fileDeID","text":"filetodeid character. Filename single flat file de-identify. fd_varname_mrn character. Name MRN variable file de-identify. Default \"PAT_MRN\". variablestoremove character vector. Names variables extraction file remove. Default character(0), variables remove. variablestoblank character vector. Names variables extraction file blank. variable remain output file ” rows. Default character(0), variables blank. datevariablestodateshift character vector. Names variables dates date-shifted. Default character(0), variables shift. dateformat character. Format date variables extraction file.  Default \"%Y-%m-%d\" corresponding 4-digit year, hyphen, 2-digit month, hyphen, 2-digit day. datetimevariablestodateshift character vector. Names variables datetimes date-shifted. Default character(0), variables shift. datetimeformat character. Format datetime variables extraction file.  Default \"%Y-%m-%d %H:%M:%OS\" corresponding 4-digit year, hyphen, 2-digit month, hyphen, 2-digit day, space, 2-digit (24) hour, colon, 2-digit minute, colon 2-digit second. separator character. Field separator filetodeid (input file). Default \",\". separator_out character. Field separator use outputfile. Default \",\". xwalk data.frame containing crosswalk information. Usually output loadxwalks(). compare_mrn_numeric logical. MRNs compared numeric variables? Usually good idea leading 0s may dropped processing. Default whatever used create xwalk, TRUE default. outputfile character. Name file write de-identified data. NULL (default) data written, returned function. additional option special value \"SOURCE_\", causes output written filename input prepended \"SOURCE_\". usefread TRUE (default), use data.table::fread() data.table::fwrite(). FALSE, use utils::read.csv() utils::write.csv(). TRUE usually preferable FALSE results double quotes around almost values producing output file. verbose integer. Higher values produce output console.  Default 0, output.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/fileDeID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"De-identify machine extraction data — fileDeID","text":"(invisibly) data.frame (even usefread == TRUE) variables tokenized, date-shifted, removed, /blanked, requested.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/fileDeID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"De-identify machine extraction data — fileDeID","text":"","code":"dataloc <- system.file(\"extdata\", package = \"DeIDmachinedata\") fn1 <- sprintf(\"%s/xwalk1.csv\", dataloc) fn2 <- sprintf(\"%s/xwalk2.csv\", dataloc) xwalk <- loadxwalks(tokenfile = fn1, dateshiftfile = fn2) fn3 <- sprintf(\"%s/pentacam_UCH.csv\", dataloc) deidfile <- fileDeID(   filetodeid = fn3,   fd_varname_mrn = \"Pat-ID:\",   variablestoremove = c(\"Last Name:\", \"First Name:\", \"D.o.Birth:\"),   variablestoblank = \"Exam Comment:\",   datevariablestodateshift = \"Exam Date:\",   dateformat = \"%m/%d/%Y\",   xwalk = xwalk,   outputfile = NULL,   verbose = 2) #> Processing /home/runner/work/_temp/Library/DeIDmachinedata/extdata/pentacam_UCH.csv #> /home/runner/work/_temp/Library/DeIDmachinedata/extdata/pentacam_UCH.csv Variable Names #>  [1] \"Last Name:\"     \"First Name:\"    \"Pat-ID:\"        \"D.o.Birth:\"     #>  [5] \"Exam Date:\"     \"Exam Time:\"     \"Exam Eye:\"      \"Exam Type:\"     #>  [9] \"Exam Comment:\"  \"Status\"         \"Error\"          \"Rf F (mm):\"     #> [13] \"Rs F (mm):\"     \"Rh F (mm):\"     \"Rv F (mm):\"     \"K1 F (D):\"      #> [17] \"K2 F (D):\"      \"Rm F (mm):\"     \"Km F (D):\"      \"Axis F (flat):\" #> [21] \"Astig F (D):\"   \"R Per F (mm)\"   \"R Min (mm)\"     #> 3 rows read from /home/runner/work/_temp/Library/DeIDmachinedata/extdata/pentacam_UCH.csv #>   Pat-ID: Exam Date: Exam Time: Exam Eye: Exam Type: Exam Comment: #> 1       2   1/2/2020        123        OS      penta           PII #> 2       2  1/31/2020        234        OS      penta           PII #> 3       9 12/31/1999        321        OD      penta           PII #>               Status Error Rf F (mm): Rs F (mm): Rh F (mm): Rv F (mm): #> 1               Good  None        9.3       <NA>        4.9       <NA> #> 2 Good, Really Good!  None        9.3        8.7        4.1        6.3 #> 3                Bad   Yes          9        8.7       <NA>        6.3 #>   K1 F (D): K2 F (D): Rm F (mm): Km F (D): Axis F (flat): Astig F (D): #> 1        50        60        8.1        35             75           10 #> 2        40        50          8        30             80           30 #> 3         0         0        7.9        10             20           30 #>   R Per F (mm) R Min (mm) #> 1            5          9 #> 2          5.5         10 #> 3          1.1          6 #> Summary of MRN matching index #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>       2       2       2       2       2       2       1  #> Number of patients with each number of test (original MRN) #>  #> 1 2  #> 1 1  #> Number of patients with each number of test (tokenized MRN) #>  #> 1 2  #> 1 1  #>      1 tokenized mrns missing of      3 #> Shifting Exam Date: #> [1] \"1/2/2020\"   \"1/31/2020\"  \"12/31/1999\" #> [1] \"2020-01-06\" \"2020-02-04\" NA           deidfile # Note last test was on a person not in the crosswalk #>   Pat-ID: Exam Date: Exam Time: Exam Eye: Exam Type: Exam Comment: #> 1       b 2020-01-06        123        OS      penta          <NA> #> 2       b 2020-02-04        234        OS      penta          <NA> #> 3    <NA>       <NA>        321        OD      penta          <NA> #>               Status Error Rf F (mm): Rs F (mm): Rh F (mm): Rv F (mm): #> 1               Good  None        9.3       <NA>        4.9       <NA> #> 2 Good, Really Good!  None        9.3        8.7        4.1        6.3 #> 3                Bad   Yes          9        8.7       <NA>        6.3 #>   K1 F (D): K2 F (D): Rm F (mm): Km F (D): Axis F (flat): Astig F (D): #> 1        50        60        8.1        35             75           10 #> 2        40        50          8        30             80           30 #> 3         0         0        7.9        10             20           30 #>   R Per F (mm) R Min (mm) #> 1            5          9 #> 2          5.5         10 #> 3          1.1          6"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/loadxwalks.html","id":null,"dir":"Reference","previous_headings":"","what":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","title":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","text":"One crosswalk mrns tokenized mrns. Optionally (date-shifting done), second file mrns date shift variable","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/loadxwalks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","text":"","code":"loadxwalks(   tokenfile = NULL,   t_varname_mrn = \"PAT_MRN\",   t_varname_mrn_token = \"PAT_MRN_T\",   t_separator = \",\",   dateshiftfile = NULL,   ds_varname_mrn = \"PAT_MRN\",   ds_varname_dateshift = \"SHIFT_NUM\",   ds_separator = \",\",   compare_mrn_numeric = TRUE,   verbose = 0L )"},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/loadxwalks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","text":"tokenfile character. Name mrn-tokenized mrn crosswalk file. t_varname_mrn character. Name mrn variable token file.  Default \"PAT_MRN\". t_varname_mrn_token character. Name tokenized mrn variable token file.  Default \"PAT_MRN_T\". t_separator character. Field separator tokenfile. Default \",\". dateshiftfile character. Name mrn-date shift file. ds_varname_mrn character. Name mrn variable date shift file.  Default \"PAT_MRN\". ds_varname_dateshift character. Name date shift variable. Default \"SHIFT_NUM\" ds_separator character. Field separator dateshiftfile. Default \",\". compare_mrn_numeric logical. MRNs compared numeric variables? Usually good idea leading 0s may dropped processing. Default TRUE. verbose integer. Higher values produce output console.  Default 0, output.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/loadxwalks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","text":"data.frame columns PAT_MRN PAT_MRN_T , dateshiftfile NULL, SHIFT_NUM.","code":""},{"path":"https://chrisandrewsphd.github.io/DeIDmachinedata/reference/loadxwalks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load crosswalk(s) needed to de-identify machine data. — loadxwalks","text":"","code":"dataloc <- system.file(\"extdata\", package = \"DeIDmachinedata\") fn1 <- sprintf(\"%s/xwalk1.csv\", dataloc) fn2 <- sprintf(\"%s/xwalk2.csv\", dataloc) xwalk <- loadxwalks(   tokenfile = fn1,   t_varname_mrn = \"PAT_MRN\",   t_varname_mrn_token = \"PAT_MRN_T\",   dateshiftfile = fn2,   ds_varname_mrn = \"PAT_MRN\",   ds_varname_dateshift = \"SHIFT_NUM\",   compare_mrn_numeric = TRUE,   verbose = 2) #> Date Shift Crosswalk Variable Names #> [1] \"PAT_MRN\"   \"SHIFT_NUM\" #> 6 rows read from /home/runner/work/_temp/Library/DeIDmachinedata/extdata/xwalk2.csv #>   PAT_MRN SHIFT_NUM #> 1       1         3 #> 2       2         4 #> 3       3         5 #> 4       4         6 #> 5       5         7 #> 6       6         8 #> 6 unique rows in /home/runner/work/_temp/Library/DeIDmachinedata/extdata/xwalk2.csv #> Token Crosswalk Variable Names #> [1] \"PAT_MRN\"   \"PAT_MRN_T\" #> 6 rows read from /home/runner/work/_temp/Library/DeIDmachinedata/extdata/xwalk1.csv #>   PAT_MRN PAT_MRN_T #> 1       1         a #> 2       2         b #> 3       3         c #> 4       4         d #> 5       5         e #> 6       6         f #> 6 unique rows in /home/runner/work/_temp/Library/DeIDmachinedata/extdata/xwalk1.csv xwalk #>   PAT_MRN PAT_MRN_T SHIFT_NUM #> 1       1         a         3 #> 2       2         b         4 #> 3       3         c         5 #> 4       4         d         6 #> 5       5         e         7 #> 6       6         f         8"}]
